{
	"info": {
		"_postman_id": "34de0fd9-5966-43fa-879c-5b03e919381e",
		"name": "Reqres API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26773211"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Verify name of user\", function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"name\"));",
							"});",
							"",
							"pm.test(\"Verify job of user\", function () {",
							"    pm.expect(jsonData.job).to.eql(pm.environment.get(\"job\"));",
							"});",
							"",
							"postman.setEnvironmentVariable(\"user_id\", jsonData.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{name}}\",\n    \"job\": \"{{job}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//this endpoint can't using id from create user step",
							"//so i use static id = 12, to hit this endpoint",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify id of user\", function () {",
							"    pm.expect(jsonData.data.id).to.eql(parseInt(pm.environment.get(\"get_user_id\")));",
							"});",
							"pm.test(\"Verify email of user\", function () {",
							"    pm.expect(jsonData.data.email).to.eql(\"rachel.howell@reqres.in\");",
							"});",
							"pm.test(\"Verify first_name of user\", function () {",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Rachel\");",
							"});",
							"pm.test(\"Verify last_name of user\", function () {",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Howell\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/users/{{get_user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{get_user_id}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Verify name of user\", function () {",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"update_name\"));",
							"    console.log(jsonData.name, pm.environment.get(\"update_name\"))",
							"});",
							"pm.test(\"Verify first_name of user\", function () {",
							"    pm.expect(jsonData.job).to.eql(pm.environment.get(\"job\"));",
							"});",
							"",
							"postman.setEnvironmentVariable(\"user_id\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{update_name}}\",\n    \"job\": \"{{job}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/users/{{user_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	]
}
